package PracticaClase;

import java.time.LocalDate;
import javax.swing.JOptionPane;

public class JDAlumno extends javax.swing.JDialog {

    private Alumno miAlumno = null;
    private boolean confirmar = false;

    /**
     * Creates new form JDAlumno
     */
    public JDAlumno(java.awt.Frame parent, String titulo, Alumno a) {
        super(parent, titulo, true);
        initComponents();
        miAlumno = a;
        if (miAlumno != null) {
            jtNombre.setText(miAlumno.getNombre());
            jtFecha.setText(String.valueOf(miAlumno.getIngreso()));
            jtNota.setText(String.valueOf(miAlumno.getNombre()));
        }

    }

    public JDAlumno(AlumnosFrame aThis, String nombre, double nota, LocalDate ingreso) {
        super(aThis, "Modificar", true); // Título del diálogo
        initComponents();

        // Rellenar los campos con los datos recibidos
        jtNombre.setText(nombre);
        jtNota.setText(String.valueOf(nota));
        jtFecha.setText(ingreso.toString());

    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbNombre = new javax.swing.JLabel();
        lbNota = new javax.swing.JLabel();
        lbFechaIngreso = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jtNota = new javax.swing.JTextField();
        jtFecha = new javax.swing.JTextField();
        guardarBt = new javax.swing.JButton();
        jtCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbNombre.setText("Nombre:");

        lbNota.setText("Nota");

        lbFechaIngreso.setText("FechaIngreso");

        guardarBt.setText("Guardar");
        guardarBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtActionPerformed(evt);
            }
        });

        jtCancelar.setText("Cancelar");
        jtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbFechaIngreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbNota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(guardarBt)))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtCancelar)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtNota, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombre)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNota)
                    .addComponent(jtNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFechaIngreso)
                    .addComponent(jtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarBt)
                    .addComponent(jtCancelar))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*
        este metodo lo utilizamos para guardar informacion de los alumno que queremos introducir 
     */
    private void guardarBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtActionPerformed
        //1 comprobar que los datos esten bien
        //2 comprobar que los objetos tengan datos correctos 
        try {
            String nombre = jtNombre.getText().trim();
            double nota = Double.parseDouble(jtNota.getText().trim());
            if (nota >= 0 && nota <= 10) {
                LocalDate fecha = LocalDate.parse(jtFecha.getText().trim());

                if (miAlumno == null) {
                    miAlumno = new Alumno(0, nombre, nota, fecha); 
                } else {
                    miAlumno.setNombre(nombre);
                    miAlumno.setNota(nota);
                    miAlumno.setIngreso(fecha);
                }
                confirmar = true;
                dispose();
                JOptionPane.showMessageDialog(null, "Datos introducidos correctamente ");
            }else{
                JOptionPane.showMessageDialog(null, "La nota que has introducido es incorrecta el rago debe estar entre 0 y 10");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Datos imbalidos, revisa lo que has introducido");
        }
    }//GEN-LAST:event_guardarBtActionPerformed

    /*
        este metodo solo lo utilizamos para salirnos no se van a guardar los cambios 
     */
    private void jtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_jtCancelarActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDAlumno dialog = new JDAlumno(new javax.swing.JFrame(), "", null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton guardarBt;
    private javax.swing.JButton jtCancelar;
    private javax.swing.JTextField jtFecha;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTextField jtNota;
    private javax.swing.JLabel lbFechaIngreso;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lbNota;
    // End of variables declaration//GEN-END:variables

    // Método para saber si se pulsó "Guardar"
    public boolean isConfirmado() {
        return confirmar;
    }

    // Getters para los datos
    public String getNombre() {
        return jtNombre.getText().trim();
    }

    public double getNota() {
        return Double.parseDouble(jtNota.getText().trim());
    }

    public LocalDate getFechaIngreso() {
        return LocalDate.parse(jtFecha.getText().trim());
    }
}
